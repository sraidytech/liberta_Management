# Please do not edit this file manually
# It should be added in your version-control system (i.e. Git)
migration_name = "add_commission_tables"
datamodel = """
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String?
  role      UserRole @default(AGENT_SUIVI)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Agent-specific fields
  agentCode     String?           @unique
  availability  AgentAvailability @default(OFFLINE)
  maxOrders     Int               @default(50)
  currentOrders Int               @default(0)

  // Relations
  assignedOrders   Order[]
  agentActivities  AgentActivity[]
  notifications    Notification[]
  createdApiConfigs ApiConfiguration[] @relation("CreatedBy")
  commissionRates  AgentCommissionRate[] @relation("AgentCommissionRates")

  // NextAuth.js fields
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model ProductCommission {
  id                    String   @id @default(cuid())
  productName          String   @unique
  packQuantity         Int      // 1, 2, or 4
  commissionCriteria   Json     // Flexible JSON structure for all commission rules
  isActive             Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("product_commissions")
}

model AgentCommissionRate {
  id                String   @id @default(cuid())
  agentId           String   
  confirmationRate  Float    // Manually set confirmation rate
  period            String   // 'weekly' or 'monthly'
  startDate         DateTime
  endDate           DateTime
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  agent User @relation("AgentCommissionRates", fields: [agentId], references: [id])
  
  @@unique([agentId, period, startDate])
  @@map("agent_commission_rates")
}
"""