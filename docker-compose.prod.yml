# Production Docker Compose Override
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  postgres:
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  redis:
    volumes:
      - redis_prod_data:/data
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  backend:
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PORT=${PORT}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - ECOMANAGER_WEBHOOK_SECRET=${ECOMANAGER_WEBHOOK_SECRET}
      - MAYSTRO_WEBHOOK_SECRET=${MAYSTRO_WEBHOOK_SECRET}
      - MAYSTRO_API_KEY=${MAYSTRO_API_KEY}
      - MAYSTRO_API_KEY_1=${MAYSTRO_API_KEY_1}
      - MAYSTRO_API_KEY_2=${MAYSTRO_API_KEY_2}
      - MAYSTRO_API_KEY_3=${MAYSTRO_API_KEY_3}
      - MAYSTRO_API_KEY_4=${MAYSTRO_API_KEY_4}
      - MAYSTRO_API_KEY_5=${MAYSTRO_API_KEY_5}
      - MAYSTRO_API_KEY_1_NAME=${MAYSTRO_API_KEY_1_NAME}
      - MAYSTRO_API_KEY_2_NAME=${MAYSTRO_API_KEY_2_NAME}
      - MAYSTRO_API_KEY_3_NAME=${MAYSTRO_API_KEY_3_NAME}
      - MAYSTRO_BASE_URL=${MAYSTRO_BASE_URL}
    volumes:
      - ./backend:/app:ro
      - /app/node_modules
    restart: always
    command: ["npm", "run", "start"]
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=production
      - BACKEND_INTERNAL_URL=${BACKEND_INTERNAL_URL}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    volumes:
      - ./frontend:/app:ro
      - /app/node_modules
      - /app/.next
    restart: always
    command: ["npm", "run", "start"]
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local
  # REMOVED: Named volumes for node_modules to prevent caching issues
  # Using anonymous volumes instead: /app/node_modules